---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: lessor-controller
  name: lessor-controller
  namespace: lessor-system
spec:
  selector:
    matchLabels:
      name: lessor-controller
  template:
    metadata:
      labels:
        name: lessor-controller
      name: lessor-controller
    spec:
      containers:
      - command:
        - lessor
        - run
        - controller
        - --debug
        image: gcr.io/lessor-io/lessor:latest
        imagePullPolicy: Always
        name: lessor-controller
      imagePullSecrets:
      - name: gcr-credentials
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: tenants.lessor.io
spec:
  group: lessor.io
  names:
    kind: Tenant
    listKind: TenantList
    plural: tenants
    singular: tenant
  scope: Namespaced
  version: v1
---
apiVersion: v1
kind: Secret
type: kubernetes.io/dockerconfigjson
metadata:
  name: gcr-credentials
  namespace: lessor-system
data:
  # To make installing easier before Lessor is open-sourced, this credential is
  # included for the k8s-gcr-auth-ro@lessor-io.iam.gserviceaccount.com GCP
  # service account. This SA has roles/storage.objectViewer in the lessor-io
  # project which gives it access to pull lessor containers stored in GCR.
  # For more information on setting up access to a private container registry
  # with Kubernetes, see the following documentation:
  # http://docs.heptio.com/content/private-registries/pr-gcr.html
  .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL2djci5pbyI6eyJ1c2VybmFtZSI6Il9qc29uX2tleSIsInBhc3N3b3JkIjoie1xuICBcInR5cGVcIjogXCJzZXJ2aWNlX2FjY291bnRcIixcbiAgXCJwcm9qZWN0X2lkXCI6IFwibGVzc29yLWlvXCIsXG4gIFwicHJpdmF0ZV9rZXlfaWRcIjogXCI0M2NkOGE1ZmJiMmYzMzhjYjY2MjQyNmI0NDA4ZTE2NTU4ZTJkNTkzXCIsXG4gIFwicHJpdmF0ZV9rZXlcIjogXCItLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0tLS1cXG5NSUlFdlFJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLY3dnZ1NqQWdFQUFvSUJBUUNoSGgzYzlEem5adE1QXFxuKzZmOVdEVVpTS3RlbmtsekpIRUxkWVdFaThvNEpCS3gxMVpkaURIS0cvOVhFMTc4RTVTYm1NUDB6NTQrRThSWFxcbk5JejNub2UxbG1WMlZ6S09rVXUwWG9OMTVLMlp1UXhkN0o1bmtZWVlvWmpzTlU0cExzL2tFKzN4RUhYTjA2dUtcXG5RTmd0Y0w4UmQzUHFIdFAvM3ppZm9yR3ovSHpLK2N3cFhwa0dDankvMXpLNUVsNThZSnpDNDREb2o0ODJZajM0XFxueWhwL2NwTG85VG9DOERLYUwxcklWNEsrMjdFaHpLK3JoY2ErbG1SQzhqeklxNjNuK2RyNXJkNlhrN2s0RTJhM1xcblE2dVlnVTJQWDVqWUFZMnJHZHFkblJhcnlUeDlLbmdxS0Q2SHBHVkNhZnBBY1NJU0RzMkJJajlOMUcySXFYZDhcXG5leURxbndMekFnTUJBQUVDZ2dFQUVQWlpFZG0ySThLT2kvWGtUTHdobmFUVW1JODA1UkM4R2djVER5T2h5WXY2XFxucitCMDI1U3F4cFZ3cWh2WnBINUhQS08yVmFyRXI5Sm9SRlM5cStySkYzNndTenplT2hEbFFIc0cxTDJialQza1xcbmV4V2Q0NnpOZFFCbVYzcVJNbGdXL2toMEw0SHZ5bTN6ZHdoaFQxUzV1T2xlT2IxcHpRYS9obHhHNEhwcUw2V0xcXG4wdndLNHJRWjQ0OTZscCtWVmxLeGhxVWxpQ3NRcUdLb0Y3a2xZUzJxT09Ya01SS1BiODlac203MnhSSXdWbUpQXFxudytaVmo0YmRNKzMyNjFxQjltVUcwaFY5aEpXMjk2a2hTK0JMUnN3aFJwSFNIazR1VTlLWElUdE4zWnpLazZidlxcbkxkb3hRYlBlemVOK0NnUkZRUGtZZkRGN2JmVkgwNGdTZEhESXlKRHRFUUtCZ1FEaTlKc1JZWXhKa2owbUZCenZcXG5oWTY4ZjF0NDBUQ1RrUHFYNEhIZ2FzakcwdHFoekw2Vk1ITkpUYVdESk93OElQSS9zZDBDQjM1ZlR5dU1hbDU3XFxuZWNzRWlaWnBYMjk3a0diNjVZS240eHFoMHpqN2owMEdjYSs1aWx3WDJHNkN3YVY0ZW4waXdTYnJYUUJIeEFheFxcblJiU1JsVWNRVEdxU0loMTY5OW1QOWxHZWV3S0JnUUMxdkpFTXJmRUNnNnJwMmFCb0duL29nQ0lUNUF3bWVLV09cXG5ieElmWjJDS1lWNnB6L1YyeVlTMExES0trR09XWC8rK3o5REMwTlBsUEpRdlJqNG9rSWRTSmZqNVNxd1VmbGxwXFxuRXMrbStNcEtVMHNpczl4UkIxY3lLV052bkRUOENDc1JHSFY2VjlHZXI4LzdMVlpZYVpJWU5IVEJiRjVBY0k1Y1xcbmpBZlFmOGkvNlFLQmdRQ2ZIbGZKNjlacmpuZ0l4bmt6QlRSNXUrRHA1K0JpMVhhY0hPUTZMeVB0SWMvZk9LazFcXG45KzRjS3JBc0xpcmlUVWNLbVMwV1N5S3l0OU1VYzA4aXl0VW5yVDhqU2FIancrNHZZZElrMnZqRkZFNFRNUGtUXFxuMTRrWVVJVVl3c2xZSzJSVC82elVQUStJWEgvaDBQSFFQOHJGZHgrSHNjdldBTTBpZGJxM1VEOFJHUUtCZ0MvMlxcblpCR0VsbWFqZVNmZVY0Y2g5ei9WRVNsT3RpWXhFUUJXTCtJNTFqQ3ZJZHlQRmFrVDVnSG02Qy9KaTM3VU54cVVcXG5uZlBNU1IvbXJQVU5CTHFQNmlhei90Rkw4NzQwMmtQd3d2eStEQ1V4ZGxMaVJQTGRqUldmOXE0dCs0M0lXaFZZXFxuN3lncXBSZk1Mb2VMbjQ0VnpvaTB6MXQ4emlNVGtYNjdOaFRBcEtxQkFvR0FXZWp1Njk1eW85dHF2eHptRUFqTFxcblBkNmFuQW02OUxic2dMUFBsM2RZYVNBQ3VQc1BPcW5KSE9ocFVibjZsZjlFZUJLMUt0d0xGMWo1MFZJRUVucVFcXG43a2I3U3RvQXBDZE9DdFZIVXN2UUltUitoUWYvb0cyQUExTmxVWHBhcHIyVnZzSDRRL2NBY1NVdlV5d2ZUdWJBXFxuWEQ5a0dGOG5TSjdOa3Voc0hGdkRtVUE9XFxuLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLVxcblwiLFxuICBcImNsaWVudF9lbWFpbFwiOiBcIms4cy1nY3ItYXV0aC1yb0BsZXNzb3ItaW8uaWFtLmdzZXJ2aWNlYWNjb3VudC5jb21cIixcbiAgXCJjbGllbnRfaWRcIjogXCIxMDA4OTQ1NDc3ODU5NTIxNTE5OThcIixcbiAgXCJhdXRoX3VyaVwiOiBcImh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL29hdXRoMi9hdXRoXCIsXG4gIFwidG9rZW5fdXJpXCI6IFwiaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tL28vb2F1dGgyL3Rva2VuXCIsXG4gIFwiYXV0aF9wcm92aWRlcl94NTA5X2NlcnRfdXJsXCI6IFwiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vb2F1dGgyL3YxL2NlcnRzXCIsXG4gIFwiY2xpZW50X3g1MDlfY2VydF91cmxcIjogXCJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9yb2JvdC92MS9tZXRhZGF0YS94NTA5L2s4cy1nY3ItYXV0aC1ybyU0MGxlc3Nvci1pby5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbVwiXG59IiwiZW1haWwiOiJ1c2VyQGV4YW1wbGUuY29tIiwiYXV0aCI6IlgycHpiMjVmYTJWNU9uc0tJQ0FpZEhsd1pTSTZJQ0p6WlhKMmFXTmxYMkZqWTI5MWJuUWlMQW9nSUNKd2NtOXFaV04wWDJsa0lqb2dJbXhsYzNOdmNpMXBieUlzQ2lBZ0luQnlhWFpoZEdWZmEyVjVYMmxrSWpvZ0lqUXpZMlE0WVRWbVltSXlaak16T0dOaU5qWXlOREkyWWpRME1EaGxNVFkxTlRobE1tUTFPVE1pTEFvZ0lDSndjbWwyWVhSbFgydGxlU0k2SUNJdExTMHRMVUpGUjBsT0lGQlNTVlpCVkVVZ1MwVlpMUzB0TFMxY2JrMUpTVVYyVVVsQ1FVUkJUa0puYTNGb2EybEhPWGN3UWtGUlJVWkJRVk5EUWt0amQyZG5VMnBCWjBWQlFXOUpRa0ZSUTJoSWFETmpPVVI2YmxwMFRWQmNiaXMyWmpsWFJGVmFVMHQwWlc1cmJIcEtTRVZNWkZsWFJXazRielJLUWt0NE1URmFaR2xFU0V0SEx6bFlSVEUzT0VVMVUySnRUVkF3ZWpVMEswVTRVbGhjYms1SmVqTnViMlV4YkcxV01sWjZTMDlyVlhVd1dHOU9NVFZMTWxwMVVYaGtOMG8xYm10WldWbHZXbXB6VGxVMGNFeHpMMnRGS3pONFJVaFlUakEyZFV0Y2JsRk9aM1JqVERoU1pETlFjVWgwVUM4emVtbG1iM0pIZWk5SWVrc3JZM2R3V0hCclIwTnFlUzh4ZWtzMVJXdzFPRmxLZWtNME5FUnZhalE0TWxscU16UmNibmxvY0M5amNFeHZPVlJ2UXpoRVMyRk1NWEpKVmpSTEt6STNSV2g2U3l0eWFHTmhLMnh0VWtNNGFucEpjVFl6Yml0a2NqVnlaRFpZYXpkck5FVXlZVE5jYmxFMmRWbG5WVEpRV0RWcVdVRlpNbkpIWkhGa2JsSmhjbmxVZURsTGJtZHhTMFEyU0hCSFZrTmhabkJCWTFOSlUwUnpNa0pKYWpsT01VY3lTWEZZWkRoY2JtVjVSSEZ1ZDB4NlFXZE5Ra0ZCUlVOblowVkJSVkJhV2tWa2JUSkpPRXRQYVM5WWExUk1kMmh1WVZSVmJVazRNRFZTUXpoSFoyTlVSSGxQYUhsWmRqWmNibklyUWpBeU5WTnhlSEJXZDNGb2RscHdTRFZJVUV0UE1sWmhja1Z5T1VwdlVrWlRPWEVyY2twR016WjNVM3A2WlU5b1JHeFJTSE5ITVV3eVltcFVNMnRjYm1WNFYyUTBObnBPWkZGQ2JWWXpjVkpOYkdkWEwydG9NRXcwU0haNWJUTjZaSGRvYUZReFV6VjFUMnhsVDJJeGNIcFJZUzlvYkhoSE5FaHdjVXcyVjB4Y2JqQjJkMHMwY2xGYU5EUTVObXh3SzFaV2JFdDRhSEZWYkdsRGMxRnhSMHR2UmpkcmJGbFRNbkZQVDFoclRWSkxVR0k0T1ZwemJUY3llRkpKZDFadFNsQmNibmNyV2xacU5HSmtUU3N6TWpZeGNVSTViVlZITUdoV09XaEtWekk1Tm10b1V5dENURkp6ZDJoU2NFaFRTR3MwZFZVNVMxaEpWSFJPTTFwNlMyczJZblpjYmt4a2IzaFJZbEJsZW1WT0swTm5Va1pSVUd0WlprUkdOMkptVmtnd05HZFRaRWhFU1hsS1JIUkZVVXRDWjFGRWFUbEtjMUpaV1hoS2Eyb3diVVpDZW5aY2JtaFpOamhtTVhRME1GUkRWR3RRY1ZnMFNFaG5ZWE5xUnpCMGNXaDZURFpXVFVoT1NsUmhWMFJLVDNjNFNWQkpMM05rTUVOQ016Vm1WSGwxVFdGc05UZGNibVZqYzBWcFdscHdXREk1TjJ0SFlqWTFXVXR1TkhoeGFEQjZhamRxTURCSFkyRXJOV2xzZDFneVJ6WkRkMkZXTkdWdU1HbDNVMkp5V0ZGQ1NIaEJZWGhjYmxKaVUxSnNWV05SVkVkeFUwbG9NVFk1T1cxUU9XeEhaV1YzUzBKblVVTXhka3BGVFhKbVJVTm5Obkp3TW1GQ2IwZHVMMjluUTBsVU5VRjNiV1ZMVjA5Y2JtSjRTV1phTWtOTFdWWTJjSG92VmpKNVdWTXdURVJMUzJ0SFQxZFlMeXNyZWpsRVF6Qk9VR3hRU2xGMlVtbzBiMnRKWkZOS1ptbzFVM0YzVldac2JIQmNia1Z6SzIwclRYQkxWVEJ6YVhNNWVGSkNNV041UzFkT2RtNUVWRGhEUTNOU1IwaFdObFk1UjJWeU9DODNURlphV1dGYVNWbE9TRlJDWWtZMVFXTkpOV05jYm1wQlpsRm1PR2t2TmxGTFFtZFJRMlpJYkdaS05qbGFjbXB1WjBsNGJtdDZRbFJTTlhVclJIQTFLMEpwTVZoaFkwaFBVVFpNZVZCMFNXTXZaazlMYXpGY2Jqa3JOR05MY2tGelRHbHlhVlJWWTB0dFV6QlhVM2xMZVhRNVRWVmpNRGhwZVhSVmJuSlVPR3BUWVVocWR5czBkbGxrU1dzeWRtcEdSa1UwVkUxUWExUmNiakUwYTFsVlNWVlpkM05zV1VzeVVsUXZObnBWVUZFclNWaElMMmd3VUVoUlVEaHlSbVI0SzBoelkzWlhRVTB3YVdSaWNUTlZSRGhTUjFGTFFtZERMekpjYmxwQ1IwVnNiV0ZxWlZObVpWWTBZMmc1ZWk5V1JWTnNUM1JwV1hoRlVVSlhUQ3RKTlRGcVEzWkpaSGxRUm1GclZEVm5TRzAyUXk5S2FUTTNWVTU0Y1ZWY2JtNW1VRTFUVWk5dGNsQlZUa0pNY1ZBMmFXRjZMM1JHVERnM05EQXlhMUIzZDNaNUswUkRWWGhrYkV4cFVsQk1aR3BTVjJZNWNUUjBLelF6U1Zkb1ZsbGNiamQ1WjNGd1VtWk5URzlsVEc0ME5GWjZiMmt3ZWpGME9IcHBUVlJyV0RZM1RtaFVRWEJMY1VKQmIwZEJWMlZxZFRZNU5YbHZPWFJ4ZG5oNmJVVkJha3hjYmxCa05tRnVRVzAyT1V4aWMyZE1VRkJzTTJSWllWTkJRM1ZRYzFCUGNXNUtTRTlvY0ZWaWJqWnNaamxGWlVKTE1VdDBkMHhHTVdvMU1GWkpSVVZ1Y1ZGY2JqZHJZamRUZEc5QmNFTmtUME4wVmtoVmMzWlJTVzFTSzJoUlppOXZSekpCUVRGT2JGVlljR0Z3Y2pKV2RuTklORkV2WTBGalUxVjJWWGwzWmxSMVlrRmNibGhFT1d0SFJqaHVVMG8zVG10MWFITklSblpFYlZWQlBWeHVMUzB0TFMxRlRrUWdVRkpKVmtGVVJTQkxSVmt0TFMwdExWeHVJaXdLSUNBaVkyeHBaVzUwWDJWdFlXbHNJam9nSW1zNGN5MW5ZM0l0WVhWMGFDMXliMEJzWlhOemIzSXRhVzh1YVdGdExtZHpaWEoyYVdObFlXTmpiM1Z1ZEM1amIyMGlMQW9nSUNKamJHbGxiblJmYVdRaU9pQWlNVEF3T0RrME5UUTNOemcxT1RVeU1UVXhPVGs0SWl3S0lDQWlZWFYwYUY5MWNta2lPaUFpYUhSMGNITTZMeTloWTJOdmRXNTBjeTVuYjI5bmJHVXVZMjl0TDI4dmIyRjFkR2d5TDJGMWRHZ2lMQW9nSUNKMGIydGxibDkxY21raU9pQWlhSFIwY0hNNkx5OWhZMk52ZFc1MGN5NW5iMjluYkdVdVkyOXRMMjh2YjJGMWRHZ3lMM1J2YTJWdUlpd0tJQ0FpWVhWMGFGOXdjbTkyYVdSbGNsOTROVEE1WDJObGNuUmZkWEpzSWpvZ0ltaDBkSEJ6T2k4dmQzZDNMbWR2YjJkc1pXRndhWE11WTI5dEwyOWhkWFJvTWk5Mk1TOWpaWEowY3lJc0NpQWdJbU5zYVdWdWRGOTROVEE1WDJObGNuUmZkWEpzSWpvZ0ltaDBkSEJ6T2k4dmQzZDNMbWR2YjJkc1pXRndhWE11WTI5dEwzSnZZbTkwTDNZeEwyMWxkR0ZrWVhSaEwzZzFNRGt2YXpoekxXZGpjaTFoZFhSb0xYSnZKVFF3YkdWemMyOXlMV2x2TG1saGJTNW5jMlZ5ZG1salpXRmpZMjkxYm5RdVkyOXRJZ3A5In19fQ==
---
apiVersion: v1
kind: Namespace
metadata:
  name: lessor-system
---
apiVersion: v1
kind: Namespace
metadata:
  name: lessor-template
